enum MediaType {
  ALL
  MOVIE
  PERSON
  TV
}

enum TimeWindow {
  DAY
  WEEK
}

enum SourceMedia {
  MOVIE
  TV
}

enum Status {
  RUMORED
  PLANNED
  IN_PRODUCTION
  POST_PRODUCTION
  RELEASED
  CANCELED
}

"Get the daily or weekly trending items"
type Trending {
  page: Int! @deprecated(reason: "Not being used")
  poster_path: String
  adult: Boolean!
  overview: String!
  release_date: String
  genre_ids: [Int]!
  id: Int!
  original_title: String
  original_language: String!
  title: String
  backdrop_path: String
  popularity: Int!
  vote_count: Int!
  video: Boolean
  total_pages: Int!
  total_results: Int!
}
"Date type returned by NowPlaying Type"
type Dates {
  maximum: String
  minimum: String
}
"Describes the currently playing movies in theatre"
type NowPlaying {
  poster_path: String
  adult: Boolean
  overview: String
  release_date: String
  genre_ids: [Int]!
  id: ID!
  original_title: String
  original_language: String
  title: String
  backdrop_path: String
  popularity: Int
  vote_count: Int
  video: Boolean
  vote_average: Float
}
"Describes the currently streaming TV shows"
type NowPlayingTv {
  poster_path: String
  popularity: Int
  id: ID!
  backdrop_path: String
  vote_average: Float
  overview: String
  first_air_date: String
  origin_country: [String]
  genre_ids: [Int]
  original_language: String
  vote_count: Float
  name: String
  original_string: String
}

type NowPlayingMovies {
  nowPlaying: [NowPlaying]
  dates: Dates
}

type MediaVideo {
  # id:ID!
  iso_639_1: String
  iso_3166_1: String
  name: String
  key: String
  site: String
  size: Int
  type: String
  official: Boolean
  publishedAt: String
  id: String
}

type Genre {
  id: ID!
  name: String!
}

type ProductionCompanies {
  name: String!
  id: ID!
  logo_path: String
  origin_country: String!
}

type ProductionCountries {
  iso_3166_1: String!
  name: String!
}

type SpokenLanguages {
  iso_639_1: String
  name: String
}

type MovieDetails {
  adult: Boolean!
  backdrop_path: String
  # belongs_to_collection:
  budget: Int!
  genres: [Genre]
  homepage: String
  id: ID!
  imdb_id: String
  original_language: String
  original_title: String
  overview: String
  popularity: Int
  poster_path: String
  production_companies: [ProductionCompanies]
  production_countries: [ProductionCountries]
  release_date: String
  revenue: Int
  runtime: Int
  spoken_languages: [SpokenLanguages]
  status: Status
  tagline: String
  title: String!
  video: Boolean!
  vote_average: Float
  vote_count: Int
}

type CreatedBy {
  id: ID!
  credit_id: String!
  name: String!
  gender: String!
  profile_path: String!
}

type Network {
  name: String!
  id: ID!
  logo_path: String!
  origin_country: String!
}

type Season {
  air_date: String!
  episode_count: Int!
  name: String!
  overview: String!
  poster_path: String!
  season_number: Int
}

type TvDetails {
  backdrop_path: String
  created_by: CreatedBy
  episode_run_time: [Int]
  first_air_date: String
  genres: [Genre]
  homepage: String
  id: ID!
  in_production: Boolean!
  languages: [String]!
  last_air_date: String
  name: String
  networks: [Network]
  number_of_episodes: Int
  number_of_seasons: Int
  origin_country: [String]
  original_language: String
  original_name: String
  overview: String
  popularity: Int
  production_companies: [ProductionCompanies]
  production_countries: [ProductionCountries]
  seasons: [Season]
  spoken_languages: [SpokenLanguages]
  status: String
  tagline: String
  type: String
  vote_average: Float
  vote_count: Int
}

type Cast {
  adult: Boolean!
  gender: Int
  id: Int!
  known_for_department: String!
  name: String!
  original_name: String!
  popularity: Int!
  profile_path: String
  cast_id: Int!
  character: String!
  credit_id: String!
  order: Int
}

type Crew {
  adult: Boolean!
  gender: Int
  id: Int!
  known_for_department: String!
  name: String!
  original_name: String!
  popularity: Int!
  profile_path: String
  credit_id: String!
  department: String!
  job: String!
}

type Credits {
  id: ID
  cast: [Cast]!
  Crew: [Crew]!
}

type Backdrop {
  aspect_ratio: Float
  file_path: String
  height: Int
  iso_639_1: String
  vote_average: Float
  vote_count: Int
  width: Int
}

type MediaImages {
  backdrops: [Backdrop]
  posters: [Backdrop]
  id: ID!
}

type Keyword {
  id: ID!
  name: String!
}

type MovieKeywords {
  id: ID!
  keywords: [Keyword]
}

union Recommendation = NowPlaying | NowPlayingTv

type SearchResultsMovieOrTv {
  result: [Recommendation]
  total_results: Int
  total_pages: Int
}

type People {
  known_for: Recommendation
  name: String!
  adult: Boolean!
  popularity: Int!
  profile_path: String
  id: ID!
}

type PeopleResult {
  total_results: Int
  total_pages: Int
  result: [People]
  page: Int!
}

type Company {
  id: ID!
  logo_path: String
  name: String
}

type Collection {
  id: ID!
  backdrop_path: String
  name: String!
  poster_path: String
}

type SearchCollection {
  page: Int!
  results: [Collection]
  total_pages: Int!
  total_results: Int!
}

type CompanySearchResult {
  page: Int!
  total_pages: Int!
  total_results: Int!
  result: [Company]
}

type Query {
  trending(mediaType: MediaType, timeWindow: TimeWindow): [Trending]
  nowPlayingMovies: NowPlayingMovies
  upcomingMovies: NowPlayingMovies
  nowPlayingTv: [NowPlayingTv]
  topRatedMovies: [NowPlaying]
  topRatedTvShows: [NowPlayingTv]
  getVideoMedia(id: ID!, sourceMedia: SourceMedia!): [MediaVideo]
  getImageMedia(id: ID!, sourceMedia: SourceMedia!): MediaImages
  getPopularMovies: [NowPlaying]
  getPoplarTv: [NowPlayingTv]
  getSimilarMovies(id: ID!, page: Int): [NowPlaying]
  getKeywords(id: ID!, mediaType: SourceMedia!): MovieKeywords
  getCast(id: ID!, mediaType: SourceMedia!): Credits
  getrecommendations(
    id: ID!
    sourceMedia: SourceMedia!
    page: Int
  ): [Recommendation]
  getMovieDetails(id: ID!): MovieDetails
  getTvDetails(id: ID!): TvDetails
  searchMoviesOrTv(
    query: String!
    mediaType: SourceMedia!
    page: Int
    include_adult: Boolean
    year: Int
    region: String
  ): SearchResultsMovieOrTv
  searchCompany(query: String!, page: Int): CompanySearchResult
  searchPeople(
    query: String!
    page: Int
    include_adult: Boolean
    region: String
  ): PeopleResult
  SearchCollection(
    query: String!
    page: Int
    language: String
  ): SearchCollection
}
